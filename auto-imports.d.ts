/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const Observable: typeof import('rxjs')['Observable']
  const catchError: typeof import('rxjs')['catchError']
  const createRef: typeof import('react')['createRef']
  const debounce: typeof import('rxjs')['debounce']
  const debounceTime: typeof import('rxjs')['debounceTime']
  const delay: typeof import('rxjs')['delay']
  const distinct: typeof import('rxjs')['distinct']
  const distinctUntilChanged: typeof import('rxjs')['distinctUntilChanged']
  const every: typeof import('rxjs')['every']
  const filter: typeof import('rxjs')['filter']
  const find: typeof import('rxjs')['find']
  const first: typeof import('rxjs')['first']
  const forkJoin: typeof import('rxjs')['forkJoin']
  const forwardRef: typeof import('react')['forwardRef']
  const from: typeof import('rxjs')['from']
  const lastValueFrom: typeof import('rxjs')['lastValueFrom']
  const lazy: typeof import('react')['lazy']
  const map: typeof import('rxjs')['map']
  const memo: typeof import('react')['memo']
  const merge: typeof import('rxjs')['merge']
  const mergeMap: typeof import('rxjs')['mergeMap']
  const of: typeof import('rxjs')['of']
  const retry: typeof import('rxjs')['retry']
  const retryWhen: typeof import('rxjs')['retryWhen']
  const skip: typeof import('rxjs')['skip']
  const skipUntil: typeof import('rxjs')['skipUntil']
  const startTransition: typeof import('react')['startTransition']
  const switchMap: typeof import('rxjs')['switchMap']
  const take: typeof import('rxjs')['take']
  const takeUntil: typeof import('rxjs')['takeUntil']
  const tap: typeof import('rxjs')['tap']
  const throttle: typeof import('rxjs')['throttle']
  const throttleTime: typeof import('rxjs')['throttleTime']
  const throwError: typeof import('rxjs')['throwError']
  const timeout: typeof import('rxjs')['timeout']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const zip: typeof import('rxjs')['zip']
}
